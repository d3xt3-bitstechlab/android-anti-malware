package isc.whu.defender.netmonitor;

import isc.whu.defender.R;
import isc.whu.defender.logger.Logger;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import android.app.Activity;
import android.app.AlarmManager;
import android.app.PendingIntent;
import android.content.Intent;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.net.TrafficStats;
import android.os.Bundle;
import android.os.SystemClock;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.Spinner;

/**
 * 流量监控器设置界面
 * 设置获取流量信息的时间间隔
 * @author Shao
 * @since 2012-02-02
 */
public class MonitorActivity extends Activity {

	private Spinner spTimeInterval;
	private Button btnApply;
	private long timeInterval;
	private ListView mListView;
	private ArrayList<HashMap<String, Object>> dataList;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.net_monitor);
		
		// get widget object
		spTimeInterval = (Spinner) findViewById(R.id.spinner_timne_interval);
		btnApply = (Button) findViewById(R.id.btn_apply);
		mListView = (ListView) findViewById(R.id.listview);
		
		
		// construct spinner for choosing time interval
		ArrayAdapter adapter = ArrayAdapter.createFromResource(this, 
				R.array.time_interval, android.R.layout.simple_spinner_item);
		adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		spTimeInterval.setAdapter(adapter);
		
		// use list view
		dataList = new ArrayList<HashMap<String, Object>>();
		getData();		
		SimpleAdapter adapter2 = new SimpleAdapter(this, 
				dataList,
				R.layout.list_cell,
				new String[] {"app_name", "app_icon", "bytes_sent", "bytes_received"},
				new int[] {R.id.uid, R.id.image_in_cell, R.id.bytes_sent, R.id.bytes_received}
		);
		mListView.setAdapter(adapter2);
		
		// set listeners
		spTimeInterval.setOnItemSelectedListener(new SpinnerItemSelectedListener());
		btnApply.setOnClickListener(new ButtonClickListener());
	}
	
	/**
	 * get data shown in listview
	 */
	private void getData() {
		PackageManager packManager = this.getPackageManager();
		List<PackageInfo> packInfo = packManager.getInstalledPackages(0);
		Iterator<PackageInfo> it = packInfo.iterator();
		
		PackageInfo p = null;
		while (it.hasNext()) {
			p = it.next();
			if ((p.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) > 0) 
				continue;
			
			HashMap<String, Object> map = new HashMap<String, Object>();
			int uid = p.applicationInfo.uid;
			long dataSent = TrafficStats.getUidTxBytes(uid);
			long dataReceived = TrafficStats.getUidRxBytes(uid);
			
			map.put("app_name",
					p.applicationInfo.loadLabel(packManager).toString()
					);
			map.put("app_icon", 
					p.applicationInfo.loadIcon(packManager)
					);
			map.put("bytes_sent", dataSent);
			map.put("bytes_received", dataReceived);
			map.put("bytes_total", dataSent + dataReceived);
			
			dataList.add(map);
		}
	}
	
	
	private class SpinnerItemSelectedListener implements OnItemSelectedListener {
		public void onItemSelected(AdapterView<?> parent, View v, int pos, long id) {
			timeInterval = 1000L;
			
			switch (pos) {
			case 0: // 4 hours 
				timeInterval *= 60 * 60 * 4;
				break;
			case 1: // 6 hours
				timeInterval *= 60 * 60 * 6;
				break;
			case 2: // 12 hours
				timeInterval *= 60 * 60 * 12;
				break;
				default:
			}
			
			System.out.println(timeInterval + " milliseconds");
		}
		
		public void onNothingSelected(AdapterView<?> parent) {
			System.out.println("Nothing selected");
		}
	}

	private class ButtonClickListener implements OnClickListener {
		public void onClick(View v) {
			Logger.write("TrafficMonitor, Apply button clicked.");
			
			// 创建广播发送器
			Intent intent = new Intent(MonitorActivity.this, AlarmReceiver.class);
			intent.setAction(AlarmReceiver.ALARM_ACTION);
			PendingIntent sender = PendingIntent.getBroadcast(
					MonitorActivity.this, 0, intent, 0);
			AlarmManager am = (AlarmManager) getApplicationContext().getSystemService(ALARM_SERVICE);
			
			// 取消之前的设置
			am.cancel(sender);
			
			long triggerTime = System.currentTimeMillis() + 1000;
			
			am.setRepeating(AlarmManager.RTC, triggerTime, timeInterval, sender);
		}
		
		/*
		private long calTriggerTime() {
			// 获得当前年、月、日
			Calendar c = Calendar.getInstance();
			int year = c.get(Calendar.YEAR);
			int month= c.get(Calendar.MONTH);
			int day = c.get(Calendar.DAY_OF_MONTH);
			int hour = c.get(Calendar.HOUR_OF_DAY) + 1; // 从下一个小时开始
			int minute = 0;
			long piece = 0;
			
			// 如果下一个小时大于或者等于24，即到了第二天
			// 重置小时数，天数直接加1又可能会导致月份甚至年份增加
			// 既然是以1970年为起始点计算，那么天数加1也就是距离
			// 1970年又远了1000*60*60*24毫秒
			if (hour >= 24) {
				hour -= 24;
				piece = 1000L * 60 * 60 * 24;
			}
			
			Calendar c2 = Calendar.getInstance();
//			c2.set(year, month, day, hour, minute, 0);
			c2.set(2012, 2, 11, 0, 17, 0);
			piece = 0;
			
			return c2.getTimeInMillis() + piece;
		}
		*/
	}
	
}